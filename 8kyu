// EXAMPLE_1 //
// Student's final grade //
// firstSolution //

function finalGrade (exam, projects) {
  if ( exam > 90 || projects > 10) {
    return 100;
  } else if ( exam > 75 && projects >= 5) {
    return 90;
  } else if ( exam > 50 && projects >= 2) {
    return 75;
  } else {
    return 0;
    }
}

// secondSolution //

const finalGrade = (exam, projects) => {
  return (
    exam > 90 || projects > 10 ? 100 :
    exam > 75 && projects >= 5 ? 90 :
    exam > 50 && projects >= 2 ? 75 : 0
  );
}

  // Sample tests //

  describe("Sample tests", function(){
    Test.assertEquals(finalGrade(100, 12), 100);
    Test.assertEquals(finalGrade(85, 5), 90);
  });

// EXAMPLE_2 //
// Count the monkeys! //
// firstSolution //

function monkeyCount(n) {
  var count = [];
  var i = 1;
  while (i <= n) {
    count.push(i);
    i++;
  } 
  return count;
}

// secondSolution //

function monkeyCount(n) {
  for (var i = 0, monkeys = []; i < n; monkeys.push(++i));
  return monkeys;
}

  // Sample tests //

  Test.describe("monkeyCount", _ => {
    Test.assertSimilar((monkeyCount(5)), [1, 2, 3, 4, 5]);
    Test.assertSimilar((monkeyCount(3)), [1, 2, 3]);
    Test.assertSimilar((monkeyCount(9)), [1, 2, 3, 4, 5, 6, 7, 8, 9]);
    Test.assertSimilar((monkeyCount(10)), [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);
    Test.assertSimilar((monkeyCount(20)), [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]);
  });
  

// EXAMPLE_3 //
// Count by X //
// firstSolution //

function countBy(x, n) {
  var z = []; 
  var step = x;
  for (var i = 0; i < n; i++) {
    z.push(x);
    x += step;
  }
  return z;
}

// secondSolution //

function countBy(x, n) {
  var z = [];
  while (z.length < n) z.push(x * (z.length + 1));
  return z;
}

  // Sample tests //

  Test.assertSimilar(countBy(1,5), [1,2,3,4,5], "Array does not match")
  Test.assertSimilar(countBy(2,5), [2,4,6,8,10], "Array does not match")


// EXAMPLE_4 //
// Count odd numbers below n //

function oddCount(n){
  return Math.floor(n / 2);
}

  // Sample tests //

  Test.assertEquals(oddCount(15), 7, "Oops! Wrong.");
  Test.assertEquals(oddCount(15023), 7511, "Oops! Wrong.");
